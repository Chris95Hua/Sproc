//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spriten.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color ForegroundColor {
            get {
                return ((global::System.Drawing.Color)(this["ForegroundColor"]));
            }
            set {
                this["ForegroundColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color BackgroundColor {
            get {
                return ((global::System.Drawing.Color)(this["BackgroundColor"]));
            }
            set {
                this["BackgroundColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Salmon")]
        public global::System.Drawing.Color MaskBorderColor {
            get {
                return ((global::System.Drawing.Color)(this["MaskBorderColor"]));
            }
            set {
                this["MaskBorderColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("NavajoWhite")]
        public global::System.Drawing.Color MaskBodyColor {
            get {
                return ((global::System.Drawing.Color)(this["MaskBodyColor"]));
            }
            set {
                this["MaskBodyColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightGreen")]
        public global::System.Drawing.Color MaskEmptyBodyColor {
            get {
                return ((global::System.Drawing.Color)(this["MaskEmptyBodyColor"]));
            }
            set {
                this["MaskEmptyBodyColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("CornflowerBlue")]
        public global::System.Drawing.Color MaskBorderBodyColor {
            get {
                return ((global::System.Drawing.Color)(this["MaskBorderBodyColor"]));
            }
            set {
                this["MaskBorderBodyColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightGray")]
        public global::System.Drawing.Color CheckerboardBgColor1 {
            get {
                return ((global::System.Drawing.Color)(this["CheckerboardBgColor1"]));
            }
            set {
                this["CheckerboardBgColor1"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("GhostWhite")]
        public global::System.Drawing.Color CheckerboardBgColor2 {
            get {
                return ((global::System.Drawing.Color)(this["CheckerboardBgColor2"]));
            }
            set {
                this["CheckerboardBgColor2"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Gray")]
        public global::System.Drawing.Color PixelGridColor {
            get {
                return ((global::System.Drawing.Color)(this["PixelGridColor"]));
            }
            set {
                this["PixelGridColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowPixelGrid {
            get {
                return ((bool)(this["ShowPixelGrid"]));
            }
            set {
                this["ShowPixelGrid"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int PenSize {
            get {
                return ((int)(this["PenSize"]));
            }
            set {
                this["PenSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255")]
        public byte PenOpacity {
            get {
                return ((byte)(this["PenOpacity"]));
            }
            set {
                this["PenOpacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowBrushOutline {
            get {
                return ((bool)(this["ShowBrushOutline"]));
            }
            set {
                this["ShowBrushOutline"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Draw")]
        public global::Spriten.Tool.ToolMode UserToolMode {
            get {
                return ((global::Spriten.Tool.ToolMode)(this["UserToolMode"]));
            }
            set {
                this["UserToolMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Box")]
        public global::Spriten.Dock.ColorSelector ColorDockSelectorMode {
            get {
                return ((global::Spriten.Dock.ColorSelector)(this["ColorDockSelectorMode"]));
            }
            set {
                this["ColorDockSelectorMode"] = value;
            }
        }
    }
}
